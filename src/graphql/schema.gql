scalar Date

enum InquiryStatus {
  UNRESOLVED
  RESOLVED  
}

"""
Object Type Definition
"""

type Technology {
  id: ID!
  name: String
  doc_link: String
  help_text: String
  projects: [Project]
}

type Project {
  id: ID!
  name: String!
  description: String
  tech_name: String
  students: [Student]
  hackathon: Hackathon
  technologies: [Technology]
}

type Student {
  id: ID!
  name: String
  email: String
  phone: String
  azurecode: Azurecode
  project: Project
  inquiries: [Inquiry]
}

type Azurecode {
  id: ID!
  code: String!
  expires_on: Date
  is_taken: Boolean
  student: Student
  hackathon: Hackathon
}

type Hackathon {
  id: ID!
  name: String
  slug: String
  description: String
  start_date: Date
  end_date: Date
  bot_deployed: Boolean
  azurecodes: [Azurecode]
  mentors: [Mentor]
  projects: [Project]
  findStudent(email: String): Student
  students: [Student]
  inquiries: [Inquiry]
}

type Mentor {
  id: ID!
  first_name: String
  last_name: String
  email: String
  phone: String
  bio: String
  is_available: Boolean
  skills: [Skill]
  hackathons: [Hackathon]
}

type Inquiry {
  id: ID!
  question: String
  mentor_notes: String
  is_resolved: Boolean
  student: Student
  mentor: Mentor
  skill: Skill
}

type Skill {
  id: ID!
  name: String
  mentors: [Mentor],
  inquiries: [Inquiry]
}

"""
Query Type Definition
"""

type Query {
  project(id: ID!): Project
  hackathons: [Hackathon]
  hackathon(id: ID!): Hackathon
  mentor(id: ID!): Mentor
  inquiry(id: ID!): Inquiry
  skill(id: ID!): Skill
  technology(id: ID!): Technology
  azurecode(id: ID!): Azurecode
  student(id: ID!): Student
}

type Mutation {
  setInquiryStatus(id: ID!, status: InquiryStatus!): Inquiry
  setInquiryNotes(id: ID!, notes: String): Inquiry
  setInquiryMentor(inquiryId: ID!, mentorId: ID!): Inquiry
  issueAzurecodeById(id: ID!): Azurecode
  issueUnclaimedAzurecode(hackathonId: ID!, studentName:String!, studentEmail: String!, projectName: String!, projectDescription: String, projectTechText: String): Azurecode
  newInquiry(hackathonId: ID!, studentName: String!, studentEmail: String!, question: String!): Inquiry
  newStudentProject(hackathonId: ID!, projectName:String!, projectDescription: String, studentName: String!, studentEmail: String!, studentPhone: String): Project
}
